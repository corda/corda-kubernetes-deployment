firewallMode: "BridgeInner"

networkParametersPath: "./workspace/network-parameters"

outboundConfig: {
  artemisBrokerAddress: "{{ .Values.config.resourceName }}-service:{{ .Values.corda.node.conf.p2pPort }}"
  alternateArtemisBrokerAddresses: []
}

bridgeInnerConfig: {
  floatAddresses: [ "{{- if ne .Values.corda.node.conf.floatInternalAddress "" }}
	{{- .Values.corda.node.conf.floatInternalAddress }}
{{- else }}
	{{- if and .Values.setup.firewall.enabled .Values.setup.firewall.destination.internalKubernetesCluster.enabled }}
		{{- .Values.config.resourceName }}-float-service
	{{- else }}
		{{- .Values.corda.node.conf.p2pAddress }}
	{{- end }}
{{- end }}:{{ .Values.corda.node.conf.bridgeTunnelPort }}" ]
  expectedCertificateSubject: "CN=Float Local,O=Local Only,L=London,C=GB"
  tunnelSSLConfiguration {
    keyStorePassword: "{{ .Values.corda.firewall.conf.bridgeKeystorePassword }}"
    trustStorePassword: "{{ .Values.corda.firewall.conf.truststorePassword }}"
    sslKeystore: "./workspace/certificates/bridge.jks"
    trustStoreFile: "./workspace/certificates/trust.jks"
    crlCheckSoftFail: {{ .Values.corda.node.conf.crlCheckSoftFail }}
  }
}

certificatesDirectory: "./workspace/certificates"
sslKeystore: "./workspace/certificates/sslkeystore.jks"
trustStoreFile: "./workspace/certificates/truststore.jks"
keyStorePassword: "cordacadevpass"
trustStorePassword: "{{ .Values.corda.firewall.conf.truststorePassword }}"
crlCheckSoftFail: {{ .Values.corda.node.conf.crlCheckSoftFail }}
silencedIPs: []

enableAMQPPacketTrace: false
artemisReconnectionIntervalMin: 5000
artemisReconnectionIntervalMax: 60000
politeShutdownPeriod: 1000
p2pConfirmationWindowSize: 1048576
auditServiceConfiguration: {
  loggingIntervalSec: 60
}
